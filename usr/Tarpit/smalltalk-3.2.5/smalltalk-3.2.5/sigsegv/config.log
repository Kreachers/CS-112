This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by configure, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ./configure --disable-option-checking --prefix=/afs/cats.ucsc.edu/courses/cmps112-wm/usr/smalltalk-3.2.5 --enable-subdir --enable-snprintfv-convenience --cache-file=/dev/null --srcdir=.

## --------- ##
## Platform. ##
## --------- ##

hostname = unix1.lt.ucsc.edu
uname -m = x86_64
uname -r = 3.10.0-327.22.2.el7.x86_64
uname -s = Linux
uname -v = #1 SMP Thu Jun 23 17:05:11 UTC 2016

/usr/bin/uname -p = x86_64
/bin/uname -X     = unknown

/bin/arch              = x86_64
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/lib64/qt-3.3/bin
PATH: /afs/cats.ucsc.edu/users/l/wmackey/perl5/bin
PATH: /opt/rh/devtoolset-3/root/usr/bin
PATH: /opt/rh/rh-java-common/root/usr/bin
PATH: /usr/local/bin
PATH: /usr/bin
PATH: /afs/cats.ucsc.edu/courses/cmps104a-wm/bin
PATH: /afs/cats.ucsc.edu/courses/cmps104a-wm/bin/@sys
PATH: /afs/cats.ucsc.edu/courses/cmps112-wm/usr/bin
PATH: /afs/cats.ucsc.edu/courses/cmps112-wm/usr/gprolog/bin
PATH: /afs/cats.ucsc.edu/courses/cmps112-wm/usr/ocaml/bin
PATH: /afs/cats.ucsc.edu/courses/cmps112-wm/usr/racket/bin
PATH: /afs/cats.ucsc.edu/courses/cmps112-wm/usr/smalltalk/bin
PATH: /afs/cats.ucsc.edu/courses/cmps005j-wm/Games/bin/@sys
PATH: /afs/cats.ucsc.edu/users/l/wmackey/bin
PATH: .
PATH: /usr/local/sbin
PATH: /usr/sbin
PATH: /var/cfengine/bin
PATH: /usr/local/texlive/2012/bin/x86_64-linux
PATH: /usr/local/codebench/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2350: checking for a BSD-compatible install
configure:2418: result: /usr/bin/install -c
configure:2429: checking whether build environment is sane
configure:2479: result: yes
configure:2620: checking for a thread-safe mkdir -p
configure:2659: result: /usr/bin/mkdir -p
configure:2672: checking for gawk
configure:2688: found /usr/bin/gawk
configure:2699: result: gawk
configure:2710: checking whether make sets $(MAKE)
configure:2732: result: yes
configure:2863: checking for gcc
configure:2879: found /opt/rh/devtoolset-3/root/usr/bin/gcc
configure:2890: result: gcc
configure:3119: checking for C compiler version
configure:3128: gcc --version >&5
gcc (GCC) 4.9.2 20150212 (Red Hat 4.9.2-6)
Copyright (C) 2014 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:3139: $? = 0
configure:3128: gcc -v >&5
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/opt/rh/devtoolset-3/root/usr/libexec/gcc/x86_64-redhat-linux/4.9.2/lto-wrapper
Target: x86_64-redhat-linux
Configured with: ../configure --prefix=/opt/rh/devtoolset-3/root/usr --mandir=/opt/rh/devtoolset-3/root/usr/share/man --infodir=/opt/rh/devtoolset-3/root/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --enable-multilib --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --enable-languages=c,c++,fortran,lto --enable-plugin --with-linker-hash-style=gnu --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux
Thread model: posix
gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) 
configure:3139: $? = 0
configure:3128: gcc -V >&5
gcc: error: unrecognized command line option '-V'
gcc: fatal error: no input files
compilation terminated.
configure:3139: $? = 4
configure:3128: gcc -qversion >&5
gcc: error: unrecognized command line option '-qversion'
gcc: fatal error: no input files
compilation terminated.
configure:3139: $? = 4
configure:3159: checking whether the C compiler works
configure:3181: gcc    conftest.c  >&5
configure:3185: $? = 0
configure:3233: result: yes
configure:3236: checking for C compiler default output file name
configure:3238: result: a.out
configure:3244: checking for suffix of executables
configure:3251: gcc -o conftest    conftest.c  >&5
configure:3255: $? = 0
configure:3277: result: 
configure:3299: checking whether we are cross compiling
configure:3307: gcc -o conftest    conftest.c  >&5
configure:3311: $? = 0
configure:3318: ./conftest
configure:3322: $? = 0
configure:3337: result: no
configure:3342: checking for suffix of object files
configure:3364: gcc -c   conftest.c >&5
configure:3368: $? = 0
configure:3389: result: o
configure:3393: checking whether we are using the GNU C compiler
configure:3412: gcc -c   conftest.c >&5
configure:3412: $? = 0
configure:3421: result: yes
configure:3430: checking whether gcc accepts -g
configure:3450: gcc -c -g  conftest.c >&5
configure:3450: $? = 0
configure:3491: result: yes
configure:3508: checking for gcc option to accept ISO C89
configure:3571: gcc  -c -g -O2  conftest.c >&5
configure:3571: $? = 0
configure:3584: result: none needed
configure:3615: checking for style of include used by make
configure:3643: result: GNU
configure:3669: checking dependency style of gcc
configure:3780: result: gcc3
configure:3800: checking how to run the C preprocessor
configure:3831: gcc -E  conftest.c
configure:3831: $? = 0
configure:3845: gcc -E  conftest.c
conftest.c:11:28: fatal error: ac_nonexistent.h: No such file or directory
 #include <ac_nonexistent.h>
                            ^
compilation terminated.
configure:3845: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:3870: result: gcc -E
configure:3890: gcc -E  conftest.c
configure:3890: $? = 0
configure:3904: gcc -E  conftest.c
conftest.c:11:28: fatal error: ac_nonexistent.h: No such file or directory
 #include <ac_nonexistent.h>
                            ^
compilation terminated.
configure:3904: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:3937: checking build system type
configure:3951: result: x86_64-unknown-linux-gnu
configure:3971: checking host system type
configure:3984: result: x86_64-unknown-linux-gnu
configure:4004: checking host platform
configure:4023: result: x86_64-unknown-linux3.10.0-gnu-glibc2.17
configure:4029: checking for a sed that does not truncate output
configure:4093: result: /usr/bin/sed
configure:4145: checking how to print strings
configure:4172: result: printf
configure:4193: checking for a sed that does not truncate output
configure:4257: result: /usr/bin/sed
configure:4275: checking for grep that handles long lines and -e
configure:4333: result: /usr/bin/grep
configure:4338: checking for egrep
configure:4400: result: /usr/bin/grep -E
configure:4405: checking for fgrep
configure:4467: result: /usr/bin/grep -F
configure:4502: checking for ld used by gcc
configure:4569: result: /opt/rh/devtoolset-3/root/usr/libexec/gcc/x86_64-redhat-linux/4.9.2/ld
configure:4576: checking if the linker (/opt/rh/devtoolset-3/root/usr/libexec/gcc/x86_64-redhat-linux/4.9.2/ld) is GNU ld
configure:4591: result: yes
configure:4603: checking for BSD- or MS-compatible name lister (nm)
configure:4652: result: /opt/rh/devtoolset-3/root/usr/bin/nm -B
configure:4782: checking the name lister (/opt/rh/devtoolset-3/root/usr/bin/nm -B) interface
configure:4789: gcc -c -g -O2  conftest.c >&5
configure:4792: /opt/rh/devtoolset-3/root/usr/bin/nm -B "conftest.o"
configure:4795: output
0000000000000000 B some_variable
configure:4802: result: BSD nm
configure:4805: checking whether ln -s works
configure:4809: result: yes
configure:4817: checking the maximum length of command line arguments
configure:4948: result: 1572864
configure:4965: checking whether the shell understands some XSI constructs
configure:4975: result: yes
configure:4979: checking whether the shell understands "+="
configure:4985: result: yes
configure:5020: checking how to convert x86_64-unknown-linux-gnu file names to x86_64-unknown-linux-gnu format
configure:5060: result: func_convert_file_noop
configure:5067: checking how to convert x86_64-unknown-linux-gnu file names to toolchain format
configure:5087: result: func_convert_file_noop
configure:5094: checking for /opt/rh/devtoolset-3/root/usr/libexec/gcc/x86_64-redhat-linux/4.9.2/ld option to reload object files
configure:5101: result: -r
configure:5175: checking for objdump
configure:5191: found /opt/rh/devtoolset-3/root/usr/bin/objdump
configure:5202: result: objdump
configure:5234: checking how to recognize dependent libraries
configure:5432: result: pass_all
configure:5517: checking for dlltool
configure:5547: result: no
configure:5577: checking how to associate runtime and link libraries
configure:5604: result: printf %s\n
configure:5665: checking for ar
configure:5681: found /opt/rh/devtoolset-3/root/usr/bin/ar
configure:5692: result: ar
configure:5729: checking for archiver @FILE support
configure:5746: gcc -c -g -O2  conftest.c >&5
configure:5746: $? = 0
configure:5749: ar cru libconftest.a @conftest.lst >&5
configure:5752: $? = 0
configure:5757: ar cru libconftest.a @conftest.lst >&5
ar: conftest.o: No such file or directory
configure:5760: $? = 1
configure:5772: result: @
configure:5830: checking for strip
configure:5846: found /opt/rh/devtoolset-3/root/usr/bin/strip
configure:5857: result: strip
configure:5929: checking for ranlib
configure:5945: found /opt/rh/devtoolset-3/root/usr/bin/ranlib
configure:5956: result: ranlib
configure:6058: checking command to parse /opt/rh/devtoolset-3/root/usr/bin/nm -B output from gcc object
configure:6178: gcc -c -g -O2  conftest.c >&5
configure:6181: $? = 0
configure:6185: /opt/rh/devtoolset-3/root/usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[ ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[ ][ ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' | sed '/ __gnu_lto/d' \> conftest.nm
configure:6188: $? = 0
configure:6254: gcc -o conftest -g -O2   conftest.c conftstm.o >&5
configure:6257: $? = 0
configure:6295: result: ok
configure:6332: checking for sysroot
configure:6362: result: no
configure:6439: gcc -c -g -O2  conftest.c >&5
configure:6442: $? = 0
configure:6625: checking for mt
configure:6655: result: no
configure:6675: checking if : is a manifest tool
configure:6681: : '-?'
configure:6689: result: no
configure:7327: checking for ANSI C header files
configure:7347: gcc -c -g -O2  conftest.c >&5
configure:7347: $? = 0
configure:7420: gcc -o conftest -g -O2   conftest.c  >&5
configure:7420: $? = 0
configure:7420: ./conftest
configure:7420: $? = 0
configure:7431: result: yes
configure:7444: checking for sys/types.h
configure:7444: gcc -c -g -O2  conftest.c >&5
configure:7444: $? = 0
configure:7444: result: yes
configure:7444: checking for sys/stat.h
configure:7444: gcc -c -g -O2  conftest.c >&5
configure:7444: $? = 0
configure:7444: result: yes
configure:7444: checking for stdlib.h
configure:7444: gcc -c -g -O2  conftest.c >&5
configure:7444: $? = 0
configure:7444: result: yes
configure:7444: checking for string.h
configure:7444: gcc -c -g -O2  conftest.c >&5
configure:7444: $? = 0
configure:7444: result: yes
configure:7444: checking for memory.h
configure:7444: gcc -c -g -O2  conftest.c >&5
configure:7444: $? = 0
configure:7444: result: yes
configure:7444: checking for strings.h
configure:7444: gcc -c -g -O2  conftest.c >&5
configure:7444: $? = 0
configure:7444: result: yes
configure:7444: checking for inttypes.h
configure:7444: gcc -c -g -O2  conftest.c >&5
configure:7444: $? = 0
configure:7444: result: yes
configure:7444: checking for stdint.h
configure:7444: gcc -c -g -O2  conftest.c >&5
configure:7444: $? = 0
configure:7444: result: yes
configure:7444: checking for unistd.h
configure:7444: gcc -c -g -O2  conftest.c >&5
configure:7444: $? = 0
configure:7444: result: yes
configure:7458: checking for dlfcn.h
configure:7458: gcc -c -g -O2  conftest.c >&5
configure:7458: $? = 0
configure:7458: result: yes
configure:7664: checking for objdir
configure:7679: result: .libs
configure:7950: checking if gcc supports -fno-rtti -fno-exceptions
configure:7968: gcc -c -g -O2  -fno-rtti -fno-exceptions conftest.c >&5
cc1: warning: command line option '-fno-rtti' is valid for C++/ObjC++ but not for C
configure:7972: $? = 0
configure:7985: result: no
configure:8312: checking for gcc option to produce PIC
configure:8319: result: -fPIC -DPIC
configure:8327: checking if gcc PIC flag -fPIC -DPIC works
configure:8345: gcc -c -g -O2  -fPIC -DPIC -DPIC conftest.c >&5
configure:8349: $? = 0
configure:8362: result: yes
configure:8391: checking if gcc static flag -static works
configure:8419: result: no
configure:8434: checking if gcc supports -c -o file.o
configure:8455: gcc -c -g -O2  -o out/conftest2.o conftest.c >&5
configure:8459: $? = 0
configure:8481: result: yes
configure:8489: checking if gcc supports -c -o file.o
configure:8536: result: yes
configure:8569: checking whether the gcc linker (/opt/rh/devtoolset-3/root/usr/libexec/gcc/x86_64-redhat-linux/4.9.2/ld -m elf_x86_64) supports shared libraries
configure:9726: result: yes
configure:9763: checking whether -lc should be explicitly linked in
configure:9771: gcc -c -g -O2  conftest.c >&5
configure:9774: $? = 0
configure:9789: gcc -shared  -fPIC -DPIC conftest.o  -v -Wl,-soname -Wl,conftest -o conftest 2\>\&1 \| /usr/bin/grep  -lc  \>/dev/null 2\>\&1
configure:9792: $? = 0
configure:9806: result: no
configure:9966: checking dynamic linker characteristics
configure:10466: gcc -o conftest -g -O2   -Wl,-rpath -Wl,/foo conftest.c  >&5
configure:10466: $? = 0
configure:10700: result: GNU/Linux ld.so
configure:10807: checking how to hardcode library paths into programs
configure:10832: result: immediate
configure:11372: checking whether stripping libraries is possible
configure:11377: result: yes
configure:11412: checking if libtool supports shared libraries
configure:11414: result: yes
configure:11417: checking whether to build shared libraries
configure:11438: result: yes
configure:11441: checking whether to build static libraries
configure:11445: result: yes
configure:11490: checking sys/signal.h usability
configure:11490: gcc -c -g -O2  conftest.c >&5
configure:11490: $? = 0
configure:11490: result: yes
configure:11490: checking sys/signal.h presence
configure:11490: gcc -E  conftest.c
configure:11490: $? = 0
configure:11490: result: yes
configure:11490: checking for sys/signal.h
configure:11490: result: yes
configure:11525: checking for unistd.h
configure:11525: result: yes
configure:11537: checking for getpagesize
configure:11560: gcc -o conftest -g -O2   conftest.c  >&5
configure:11560: $? = 0
configure:11568: result: yes
configure:11577: checking for sysconf(_SC_PAGESIZE)
configure:11600: gcc -o conftest -g -O2   conftest.c  >&5
configure:11600: $? = 0
configure:11608: result: yes
configure:11617: checking for PAGESIZE in limits.h
configure:11635: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'main':
conftest.c:33:12: error: 'PAGESIZE' undeclared (first use in this function)
 int pgsz = PAGESIZE;
            ^
conftest.c:33:12: note: each undeclared identifier is reported only once for each function it appears in
configure:11635: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| /* end confdefs.h.  */
| 
|       #include <limits.h>
| int
| main ()
| {
| int pgsz = PAGESIZE;
|   ;
|   return 0;
| }
configure:11643: result: no
configure:11661: checking for mmap with MAP_ANON
configure:11711: gcc -o conftest -g -O2   conftest.c  >&5
configure:11711: $? = 0
configure:11711: ./conftest
configure:11711: $? = 0
configure:11722: result: yes
configure:11731: checking for mmap with MAP_ANONYMOUS
configure:11781: gcc -o conftest -g -O2   conftest.c  >&5
configure:11781: $? = 0
configure:11781: ./conftest
configure:11781: $? = 0
configure:11792: result: yes
configure:11801: checking for mmap of /dev/zero
configure:11862: gcc -o conftest -g -O2   conftest.c  >&5
configure:11862: $? = 0
configure:11862: ./conftest
configure:11862: $? = 0
configure:11873: result: yes
configure:11895: checking whether a fault handler according to POSIX works
configure:12024: gcc -o conftest -g -O2   conftest.c  >&5
configure:12024: $? = 0
configure:12024: ./conftest
configure:12024: $? = 0
configure:12035: result: yes
configure:12043: checking whether a fault handler according to Linux/i386 works
configure:12173: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:23:8: error: redefinition of 'struct _fpx_sw_bytes'
 struct _fpx_sw_bytes {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:29:8: note: originally defined here
 struct _fpx_sw_bytes
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:134:8: error: redefinition of 'struct _fpstate'
 struct _fpstate {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:121:8: note: originally defined here
 struct _fpstate
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:157:8: error: redefinition of 'struct sigcontext'
 struct sigcontext {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:137:8: note: originally defined here
 struct sigcontext
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:193:8: error: redefinition of 'struct _xsave_hdr'
 struct _xsave_hdr {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:175:8: note: originally defined here
 struct _xsave_hdr
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:199:8: error: redefinition of 'struct _ymmh_state'
 struct _ymmh_state {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:182:8: note: originally defined here
 struct _ymmh_state
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:210:8: error: redefinition of 'struct _xstate'
 struct _xstate {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:187:8: note: originally defined here
 struct _xstate
        ^
configure:12173: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include <asm/sigcontext.h>
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, struct sigcontext sc)
| {
|   void *fault_address = (void *) (sc.cr2);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12184: result: no
configure:12192: checking whether a fault handler according to old Linux/i386 works
configure:12322: gcc -o conftest -g -O2   conftest.c  >&5
configure:12322: $? = 0
configure:12322: ./conftest
configure:12322: $? = 3
configure: program exited with status 3
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, unsigned int more)
| {
|   void *fault_address = (void *) (((unsigned long *) &more) [21]);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12333: result: no
configure:12341: checking whether a fault handler according to Linux/m68k works
configure:12473: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:23:8: error: redefinition of 'struct _fpx_sw_bytes'
 struct _fpx_sw_bytes {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:29:8: note: originally defined here
 struct _fpx_sw_bytes
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:134:8: error: redefinition of 'struct _fpstate'
 struct _fpstate {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:121:8: note: originally defined here
 struct _fpstate
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:157:8: error: redefinition of 'struct sigcontext'
 struct sigcontext {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:137:8: note: originally defined here
 struct sigcontext
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:193:8: error: redefinition of 'struct _xsave_hdr'
 struct _xsave_hdr {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:175:8: note: originally defined here
 struct _xsave_hdr
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:199:8: error: redefinition of 'struct _ymmh_state'
 struct _ymmh_state {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:182:8: note: originally defined here
 struct _ymmh_state
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:210:8: error: redefinition of 'struct _xstate'
 struct _xstate {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:187:8: note: originally defined here
 struct _xstate
        ^
In file included from conftest.c:39:0:
./src/fault-linux-m68k.c: In function 'get_fault_addr':
./src/fault-linux-m68k.c:22:20: error: 'struct sigcontext' has no member named 'sc_formatvec'
   int format = (scp->sc_formatvec >> 12) & 0xf;
                    ^
configure:12473: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include <asm/sigcontext.h>
| #include "./src/fault-linux-m68k.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (get_fault_addr (scp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12484: result: no
configure:12492: checking whether a fault handler according to Linux/PowerPC works
configure:12622: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:23:8: error: redefinition of 'struct _fpx_sw_bytes'
 struct _fpx_sw_bytes {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:29:8: note: originally defined here
 struct _fpx_sw_bytes
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:134:8: error: redefinition of 'struct _fpstate'
 struct _fpstate {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:121:8: note: originally defined here
 struct _fpstate
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:157:8: error: redefinition of 'struct sigcontext'
 struct sigcontext {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:137:8: note: originally defined here
 struct sigcontext
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:193:8: error: redefinition of 'struct _xsave_hdr'
 struct _xsave_hdr {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:175:8: note: originally defined here
 struct _xsave_hdr
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:199:8: error: redefinition of 'struct _ymmh_state'
 struct _ymmh_state {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:182:8: note: originally defined here
 struct _ymmh_state
        ^
In file included from conftest.c:38:0:
/usr/include/asm/sigcontext.h:210:8: error: redefinition of 'struct _xstate'
 struct _xstate {
        ^
In file included from /usr/include/signal.h:340:0,
                 from conftest.c:34:
/usr/include/bits/sigcontext.h:187:8: note: originally defined here
 struct _xstate
        ^
conftest.c: In function 'sigsegv_handler':
conftest.c:64:38: error: 'struct sigcontext' has no member named 'regs'
   void *fault_address = (void *) (scp->regs->dar);
                                      ^
configure:12622: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include <asm/sigcontext.h>
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (scp->regs->dar);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12633: result: no
configure:12641: checking whether a fault handler according to Linux/HPPA works
configure:12770: gcc -o conftest -g -O2   conftest.c  >&5
configure:12770: $? = 0
configure:12770: ./conftest
configure:12770: $? = 3
configure: program exited with status 3
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, siginfo_t *sip, void *ucp)
| {
|   void *fault_address = (void *) (sip->si_ptr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| action.sa_sigaction = &sigsegv_handler;
|    action.sa_flags = SA_SIGINFO;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12781: result: no
configure:12789: checking whether a fault handler according to BSD works
configure:12919: gcc -o conftest -g -O2   conftest.c  >&5
configure:12919: $? = 0
configure:12919: ./conftest
configure:12919: $? = 3
configure: program exited with status 3
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp, void *addr)
| {
|   void *fault_address = (void *) (addr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:12930: result: no
configure:12938: checking whether a fault handler according to IRIX works
configure:13068: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'sigsegv_handler':
conftest.c:64:54: error: 'struct sigcontext' has no member named 'sc_badvaddr'
   void *fault_address = (void *) ((unsigned long) scp->sc_badvaddr);
                                                      ^
configure:13068: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) ((unsigned long) scp->sc_badvaddr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13079: result: no
configure:13087: checking whether a fault handler according to HP-UX HPPA works
configure:13227: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'sigsegv_handler':
conftest.c:67:48: error: 'struct sigcontext' has no member named 'sc_sl'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                                ^
conftest.c:39:33: note: in definition of macro 'USE_64BIT_REGS'
 #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
                                 ^
conftest.c:67:35: note: in expansion of macro 'GET_CR21'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                   ^
conftest.c:39:48: error: 'SS_WIDEREGS' undeclared (first use in this function)
 #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
                                                ^
conftest.c:40:25: note: in expansion of macro 'USE_64BIT_REGS'
 #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
                         ^
conftest.c:67:35: note: in expansion of macro 'GET_CR21'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                   ^
conftest.c:39:48: note: each undeclared identifier is reported only once for each function it appears in
 #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
                                                ^
conftest.c:40:25: note: in expansion of macro 'USE_64BIT_REGS'
 #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
                         ^
conftest.c:67:35: note: in expansion of macro 'GET_CR21'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                   ^
conftest.c:67:48: error: 'struct sigcontext' has no member named 'sc_sl'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                                ^
conftest.c:39:66: note: in definition of macro 'USE_64BIT_REGS'
 #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
                                                                  ^
conftest.c:67:35: note: in expansion of macro 'GET_CR21'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                   ^
conftest.c:39:81: error: 'SS_NARROWISINVALID' undeclared (first use in this function)
 #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
                                                                                 ^
conftest.c:40:25: note: in expansion of macro 'USE_64BIT_REGS'
 #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
                         ^
conftest.c:67:35: note: in expansion of macro 'GET_CR21'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                   ^
conftest.c:67:48: error: 'struct sigcontext' has no member named 'sc_sl'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                                ^
conftest.c:40:47: note: in definition of macro 'GET_CR21'
 #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
                                               ^
conftest.c:67:48: error: 'struct sigcontext' has no member named 'sc_sl'
   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
                                                ^
conftest.c:40:76: note: in definition of macro 'GET_CR21'
 #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
                                                                            ^
configure:13227: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #define USE_64BIT_REGS(mc)   (((mc).ss_flags & SS_WIDEREGS) && ((mc).ss_flags & SS_NARROWISINVALID))
| #define GET_CR21(mc)   (USE_64BIT_REGS(mc) ? (mc).ss_wide.ss_64.ss_cr21 : (mc).ss_narrow.ss_cr21)
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (GET_CR21 (scp->sc_sl.sl_ss));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13238: result: no
configure:13246: checking whether a fault handler according to OSF/1 Alpha works
configure:13376: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'sigsegv_handler':
conftest.c:64:38: error: 'struct sigcontext' has no member named 'sc_traparg_a0'
   void *fault_address = (void *) (scp->sc_traparg_a0);
                                      ^
configure:13376: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (scp->sc_traparg_a0);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13387: result: no
configure:13395: checking whether a fault handler according to NetBSD Alpha works
configure:13525: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
./src/fault-netbsd-alpha.c: In function 'get_fault_addr':
./src/fault-netbsd-alpha.c:25:46: error: 'struct sigcontext' has no member named 'sc_pc'
   unsigned int instr = *((unsigned int *)(scp->sc_pc));
                                              ^
./src/fault-netbsd-alpha.c:36:18: error: 'struct sigcontext' has no member named 'sc_regs'
   faultaddr = scp->sc_regs[(instr >> 16) & 0x1f];
                  ^
configure:13525: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include "./src/fault-netbsd-alpha.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (get_fault_addr (scp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13536: result: no
configure:13544: checking whether a fault handler according to AIX works
configure:13674: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'sigsegv_handler':
conftest.c:64:38: error: 'struct sigcontext' has no member named 'sc_jmpbuf'
   void *fault_address = (void *) (scp->sc_jmpbuf.jmp_context.o_vaddr);
                                      ^
configure:13674: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (scp->sc_jmpbuf.jmp_context.o_vaddr);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13685: result: no
configure:13693: checking whether a fault handler according to MacOSX/Darwin7 PowerPC works
configure:13822: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
./src/fault-macosdarwin7-powerpc.c: In function 'get_fault_addr':
./src/fault-macosdarwin7-powerpc.c:43:22: error: invalid type argument of '->' (have 'mcontext_t')
     &ucp->uc_mcontext->ss.r0; /* r0..r31 */
                      ^
./src/fault-macosdarwin7-powerpc.c:130:10: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   return (void *) addr;
          ^
conftest.c: In function 'main':
conftest.c:101:21: warning: assignment from incompatible pointer type
 action.sa_sigaction = &sigsegv_handler;
                     ^
configure:13822: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include "./src/fault-macosdarwin7-powerpc.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, siginfo_t *sip, ucontext_t *ucp)
| {
|   void *fault_address = (void *) (get_fault_addr (sip, ucp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| action.sa_sigaction = &sigsegv_handler;
|    action.sa_flags = SA_SIGINFO;
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13833: result: no
configure:13842: checking whether a fault handler according to MacOSX/Darwin5 PowerPC works
configure:13972: gcc -o conftest -g -O2   conftest.c  >&5
In file included from conftest.c:38:0:
./src/fault-macosdarwin5-powerpc.c: In function 'get_fault_addr':
./src/fault-macosdarwin5-powerpc.c:36:46: error: 'struct sigcontext' has no member named 'sc_ir'
   unsigned int instr = *((unsigned int *) scp->sc_ir);
                                              ^
./src/fault-macosdarwin5-powerpc.c:37:46: error: 'struct sigcontext' has no member named 'sc_regs'
   unsigned int *regs = &((unsigned int *) scp->sc_regs)[2];
                                              ^
./src/fault-macosdarwin5-powerpc.c:123:10: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   return (void *) addr;
          ^
configure:13972: $? = 1
configure: program exited with status 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| #include "./src/fault-macosdarwin5-powerpc.c"
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (get_fault_addr (scp));
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:13983: result: no
configure:13992: checking whether a fault handler according to Hurd works
configure:14122: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'sigsegv_handler':
conftest.c:64:25: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   void *fault_address = (void *) (code);
                         ^
configure:14122: $? = 0
configure:14122: ./conftest
configure:14122: $? = 3
configure: program exited with status 3
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| /* end confdefs.h.  */
| 
| 
| #include <stdlib.h>
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| #include <sys/types.h>
| #include <sys/mman.h>
| #if HAVE_MMAP_DEVZERO
| # include <fcntl.h>
| # ifndef MAP_FILE
| #  define MAP_FILE 0
| # endif
| #endif
| #ifndef PROT_NONE
| # define PROT_NONE 0
| #endif
| #if HAVE_MMAP_ANON
| # define zero_fd -1
| # define map_flags MAP_ANON | MAP_PRIVATE
| #elif HAVE_MMAP_ANONYMOUS
| # define zero_fd -1
| # define map_flags MAP_ANONYMOUS | MAP_PRIVATE
| #elif HAVE_MMAP_DEVZERO
| static int zero_fd;
| # define map_flags MAP_FILE | MAP_PRIVATE
| #endif
| unsigned long page;
| int handler_called = 0;
| void sigsegv_handler (int sig, int code, struct sigcontext *scp)
| {
|   void *fault_address = (void *) (code);
|   handler_called++;
|   if (handler_called == 10)
|     exit (4);
|   if (fault_address != (void*)(page + 0x678))
|     exit (3);
|   if (mprotect ((void *) page, 0x10000, PROT_READ | PROT_WRITE) < 0)
|     exit (2);
| }
| void crasher (unsigned long p)
| {
|   *(int *) (p + 0x678) = 42;
| }
| int main ()
| {
|   void *p;
|   struct sigaction action;
|   /* Preparations.  */
| #if !HAVE_MMAP_ANON && !HAVE_MMAP_ANONYMOUS && HAVE_MMAP_DEVZERO
|   zero_fd = open ("/dev/zero", O_RDONLY, 0644);
| #endif
|   /* Setup some mmaped memory.  */
| #ifdef __hpux
|   /* HP-UX 10 mmap() often fails when given a hint.  So give the OS complete
|      freedom about the address range.  */
|   p = mmap ((void *) 0,          0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #else
|   p = mmap ((void *) 0x12340000, 0x10000, PROT_READ | PROT_WRITE, map_flags, zero_fd, 0);
| #endif
|   if (p == (void *)(-1))
|     exit (2);
|   page = (unsigned long) p;
|   /* Make it read-only.  */
|   if (mprotect ((void *) page, 0x10000, PROT_READ) < 0)
|     exit (2);
|   /* Install the SIGSEGV handler.  */
|   sigemptyset(&action.sa_mask);
| 
|   action.sa_handler = (void (*) (int)) &sigsegv_handler;
|   action.sa_flags = 0;
| 
|   sigaction (SIGSEGV, &action, (struct sigaction *) NULL);
|   sigaction (SIGBUS, &action, (struct sigaction *) NULL);
|   /* The first write access should invoke the handler and then complete.  */
|   crasher (page);
|   /* The second write access should not invoke the handler.  */
|   crasher (page);
|   /* Check that the handler was called only once.  */
|   if (handler_called != 1)
|     exit (1);
|   /* Test passed!  */
|   return 0;
| }
configure:14133: result: no
configure:14391: checking for the fault handler specifics
configure:14402: result: fault-posix.h
configure:14424: checking if the system supports catching SIGSEGV
configure:14426: result: yes
configure:14436: checking for stack direction
configure:14533: result: grows down
configure:14541: checking for PIOCMAP in sys/procfs.h
configure:14558: gcc -o conftest -g -O2   conftest.c  >&5
conftest.c: In function 'main':
conftest.c:38:9: error: 'PIOCNMAP' undeclared (first use in this function)
 int x = PIOCNMAP + PIOCMAP; prmap_t y;
         ^
conftest.c:38:9: note: each undeclared identifier is reported only once for each function it appears in
conftest.c:38:20: error: 'PIOCMAP' undeclared (first use in this function)
 int x = PIOCNMAP + PIOCMAP; prmap_t y;
                    ^
conftest.c:38:29: error: unknown type name 'prmap_t'
 int x = PIOCNMAP + PIOCMAP; prmap_t y;
                             ^
configure:14558: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| #define CFG_FAULT "fault-posix.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| /* end confdefs.h.  */
| #include <sys/procfs.h>
| int
| main ()
| {
| int x = PIOCNMAP + PIOCMAP; prmap_t y;
|   ;
|   return 0;
| }
configure:14567: result: no
configure:14571: checking for mincore
configure:14571: gcc -o conftest -g -O2   conftest.c  >&5
configure:14571: $? = 0
configure:14571: result: yes
configure:14616: checking for getrlimit
configure:14616: gcc -o conftest -g -O2   conftest.c  >&5
configure:14616: $? = 0
configure:14616: result: yes
configure:14616: checking for setrlimit
configure:14616: gcc -o conftest -g -O2   conftest.c  >&5
configure:14616: $? = 0
configure:14616: result: yes
configure:14632: checking for sigaltstack
configure:14632: gcc -o conftest -g -O2   conftest.c  >&5
configure:14632: $? = 0
configure:14632: result: yes
configure:14643: checking for stack_t
configure:14643: gcc -c -g -O2  conftest.c >&5
configure:14643: $? = 0
configure:14643: gcc -c -g -O2  conftest.c >&5
conftest.c: In function 'main':
conftest.c:50:22: error: expected expression before ')' token
 if (sizeof ((stack_t)))
                      ^
configure:14643: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME ""
| #define PACKAGE_TARNAME ""
| #define PACKAGE_VERSION ""
| #define PACKAGE_STRING ""
| #define PACKAGE_BUGREPORT ""
| #define PACKAGE_URL ""
| #define PACKAGE "libsigsegv"
| #define VERSION "2.5"
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define HAVE_SYS_SIGNAL_H 1
| #define CFG_SIGNALS "signals.h"
| #define HAVE_UNISTD_H 1
| #define HAVE_GETPAGESIZE 1
| #define HAVE_SYSCONF_PAGESIZE 1
| #define HAVE_MMAP_ANON 1
| #define HAVE_MMAP_ANONYMOUS 1
| #define HAVE_MMAP_DEVZERO 1
| #define CFG_FAULT "fault-posix.h"
| #define CFG_MACHFAULT "fault-none.h"
| #define STACK_DIRECTION -1
| #define HAVE_MINCORE 1
| #define HAVE_STACKVMA 1
| #define CFG_STACKVMA "stackvma-linux.c"
| #define HAVE_GETRLIMIT 1
| #define HAVE_SETRLIMIT 1
| #define HAVE_SIGALTSTACK 1
| /* end confdefs.h.  */
| 
| #include <signal.h>
| #if HAVE_SYS_SIGNAL_H
| # include <sys/signal.h>
| #endif
| 
| 
| int
| main ()
| {
| if (sizeof ((stack_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:14643: result: yes
configure:14661: checking for working sigaltstack
configure:14781: gcc -o conftest -g -O2   conftest.c  >&5
configure:14781: $? = 0
configure:14781: ./conftest
configure:14781: $? = 0
configure:14797: result: yes
configure:14806: checking if the system supports catching stack overflow
configure:14885: result: yes
configure:14908: checking whether a signal handler can be left through longjmp
configure:14993: gcc -o conftest -g -O2   conftest.c  >&5
configure:14993: $? = 0
configure:14993: ./conftest
configure:14993: $? = 0
configure:15004: result: yes
configure:15012: checking whether a signal handler can be left through longjmp and sigaltstack
configure:15107: gcc -o conftest -g -O2   conftest.c  >&5
configure:15107: $? = 0
configure:15107: ./conftest
configure:15107: $? = 0
configure:15118: result: yes
configure:15126: checking whether a signal handler can be left through longjmp and setcontext
configure:15226: gcc -o conftest -g -O2   conftest.c  >&5
configure:15226: $? = 0
configure:15226: ./conftest
configure:15226: $? = 0
configure:15237: result: yes
configure:15259: checking whether a signal handler can be left through siglongjmp
configure:15342: gcc -o conftest -g -O2   conftest.c  >&5
configure:15342: $? = 0
configure:15342: ./conftest
configure:15342: $? = 0
configure:15353: result: yes
configure:15361: checking whether a signal handler can be left through siglongjmp and sigaltstack
configure:15454: gcc -o conftest -g -O2   conftest.c  >&5
configure:15454: $? = 0
configure:15454: ./conftest
configure:15454: $? = 0
configure:15465: result: yes
configure:15473: checking whether a signal handler can be left through siglongjmp and setcontext
configure:15571: gcc -o conftest -g -O2   conftest.c  >&5
configure:15571: $? = 0
configure:15571: ./conftest
configure:15571: $? = 0
configure:15582: result: yes
configure:15790: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by config.status, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on unix1.lt.ucsc.edu

config.status:1109: creating Makefile
config.status:1109: creating src/Makefile
config.status:1109: creating src/sigsegv.h
config.status:1109: creating tests/Makefile
config.status:1109: creating config.h
config.status:1338: executing depfiles commands
config.status:1338: executing libtool commands

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-unknown-linux-gnu
ac_cv_c_compiler_gnu=yes
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_func_getrlimit=yes
ac_cv_func_mincore=yes
ac_cv_func_setrlimit=yes
ac_cv_func_sigaltstack=yes
ac_cv_header_dlfcn_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_signal_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=x86_64-unknown-linux-gnu
ac_cv_objext=o
ac_cv_path_EGREP='/usr/bin/grep -E'
ac_cv_path_FGREP='/usr/bin/grep -F'
ac_cv_path_GREP=/usr/bin/grep
ac_cv_path_SED=/usr/bin/sed
ac_cv_path_install='/usr/bin/install -c'
ac_cv_path_mkdir=/usr/bin/mkdir
ac_cv_prog_AWK=gawk
ac_cv_prog_CPP='gcc -E'
ac_cv_prog_ac_ct_AR=ar
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_ac_ct_OBJDUMP=objdump
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_ac_ct_STRIP=strip
ac_cv_prog_cc_c89=
ac_cv_prog_cc_g=yes
ac_cv_prog_make_make_set=yes
ac_cv_type_stack_t=yes
am_cv_CC_dependencies_compiler_type=gcc3
lt_cv_ar_at_file=@
lt_cv_archive_cmds_need_lc=no
lt_cv_deplibs_check_method=pass_all
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=
lt_cv_ld_reload_flag=-r
lt_cv_nm_interface='BSD nm'
lt_cv_objdir=.libs
lt_cv_path_LD=/opt/rh/devtoolset-3/root/usr/libexec/gcc/x86_64-redhat-linux/4.9.2/ld
lt_cv_path_NM='/opt/rh/devtoolset-3/root/usr/bin/nm -B'
lt_cv_path_mainfest_tool=no
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_pic='-fPIC -DPIC'
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_rtti_exceptions=no
lt_cv_prog_compiler_static_works=no
lt_cv_prog_gnu_ld=yes
lt_cv_sharedlib_from_linklib_cmd='printf %s\n'
lt_cv_shlibpath_overrides_runpath=no
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_max_cmd_len=1572864
lt_cv_to_host_file_cmd=func_convert_file_noop
lt_cv_to_tool_file_cmd=func_convert_file_noop
sv_cv_fault_aix=no
sv_cv_fault_bsd=no
sv_cv_fault_hpux_hppa=no
sv_cv_fault_hurd=no
sv_cv_fault_include=fault-posix.h
sv_cv_fault_irix=no
sv_cv_fault_linux_hppa=no
sv_cv_fault_linux_i386=no
sv_cv_fault_linux_i386_old=no
sv_cv_fault_linux_m68k=no
sv_cv_fault_linux_powerpc=no
sv_cv_fault_macosdarwin5_ppc=no
sv_cv_fault_macosdarwin7_ppc=no
sv_cv_fault_netbsd_alpha=no
sv_cv_fault_osf_alpha=no
sv_cv_fault_posix=yes
sv_cv_func_getpagesize=yes
sv_cv_func_mmap_anon=yes
sv_cv_func_mmap_anonymous=yes
sv_cv_func_mmap_devzero=yes
sv_cv_func_sysconf_pagesize=yes
sv_cv_have_sigsegv_recovery=yes
sv_cv_have_stack_overflow_recovery=yes
sv_cv_host=x86_64-unknown-linux3.10.0-gnu-glibc2.17
sv_cv_leave_handler_longjmp=yes
sv_cv_leave_handler_longjmp_setcontext=yes
sv_cv_leave_handler_longjmp_sigaltstack=yes
sv_cv_leave_handler_siglongjmp=yes
sv_cv_leave_handler_siglongjmp_setcontext=yes
sv_cv_leave_handler_siglongjmp_sigaltstack=yes
sv_cv_macro_pagesize=no
sv_cv_procfsvma=no
sv_cv_sigaltstack=yes
sv_cv_stack_direction=-1
sv_cv_stack_direction_msg='grows down'

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} /afs/cats.ucsc.edu/courses/cmps112-wm/usr/Tarpit/smalltalk-3.2.5/smalltalk-3.2.5/build-aux/missing --run aclocal-1.11'
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='$${TAR-tar}'
AR='ar'
AUTOCONF='${SHELL} /afs/cats.ucsc.edu/courses/cmps112-wm/usr/Tarpit/smalltalk-3.2.5/smalltalk-3.2.5/build-aux/missing --run autoconf'
AUTOHEADER='${SHELL} /afs/cats.ucsc.edu/courses/cmps112-wm/usr/Tarpit/smalltalk-3.2.5/smalltalk-3.2.5/build-aux/missing --run autoheader'
AUTOMAKE='${SHELL} /afs/cats.ucsc.edu/courses/cmps112-wm/usr/Tarpit/smalltalk-3.2.5/smalltalk-3.2.5/build-aux/missing --run automake-1.11'
AWK='gawk'
CC='gcc'
CCDEPMODE='depmode=gcc3'
CFG_HANDLER='handler-unix.c'
CFG_LEAVE='leave-nop.c'
CFG_STACKVMA='stackvma-linux.c'
CFLAGS='-g -O2'
CPP='gcc -E'
CPPFLAGS=''
CYGPATH_W='echo'
DEFS='-DHAVE_CONFIG_H'
DEPDIR='.deps'
DLLTOOL='false'
DSYMUTIL=''
DUMPBIN=''
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/usr/bin/grep -E'
EXEEXT=''
FAULT_CONTEXT='ucontext_t'
FAULT_CONTEXT_INCLUDE2=''
FAULT_CONTEXT_INCLUDE='#include <ucontext.h>'
FGREP='/usr/bin/grep -F'
GREP='/usr/bin/grep'
HAVE_SIGSEGV_RECOVERY='1'
HAVE_STACK_OVERFLOW_RECOVERY='1'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LD='/opt/rh/devtoolset-3/root/usr/libexec/gcc/x86_64-redhat-linux/4.9.2/ld -m elf_x86_64'
LDFLAGS=''
LIBOBJS=''
LIBS=''
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
LIPO=''
LN_S='ln -s'
LTLIBOBJS=''
MAKEINFO='${SHELL} /afs/cats.ucsc.edu/courses/cmps112-wm/usr/Tarpit/smalltalk-3.2.5/smalltalk-3.2.5/build-aux/missing --run makeinfo'
MANIFEST_TOOL=':'
MKDIR_P='/usr/bin/mkdir -p'
NM='/opt/rh/devtoolset-3/root/usr/bin/nm -B'
NMEDIT=''
OBJDUMP='objdump'
OBJEXT='o'
OTOOL64=''
OTOOL=''
PACKAGE='libsigsegv'
PACKAGE_BUGREPORT=''
PACKAGE_NAME=''
PACKAGE_STRING=''
PACKAGE_TARNAME=''
PACKAGE_URL=''
PACKAGE_VERSION=''
PATH_SEPARATOR=':'
PLATFORM='x86_64-unknown-linux3.10.0-gnu-glibc2.17'
RANLIB='ranlib'
RELOCATABLE='yes'
SED='/usr/bin/sed'
SET_MAKE=''
SHELL='/bin/sh'
STRIP='strip'
VERSION='2.5'
ac_ct_AR='ar'
ac_ct_CC='gcc'
ac_ct_DUMPBIN=''
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE='#'
am__fastdepCC_FALSE='#'
am__fastdepCC_TRUE=''
am__include='include'
am__isrc=''
am__leading_dot='.'
am__nodep='_no'
am__quote=''
am__tar='$${TAR-tar} chof - "$$tardir"'
am__untar='$${TAR-tar} xf -'
bindir='${exec_prefix}/bin'
build='x86_64-unknown-linux-gnu'
build_alias=''
build_cpu='x86_64'
build_os='linux-gnu'
build_vendor='unknown'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='x86_64-unknown-linux-gnu'
host_alias=''
host_cpu='x86_64'
host_os='linux-gnu'
host_vendor='unknown'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /afs/cats.ucsc.edu/courses/cmps112-wm/usr/Tarpit/smalltalk-3.2.5/smalltalk-3.2.5/build-aux/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='/usr/bin/mkdir -p'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/afs/cats.ucsc.edu/courses/cmps112-wm/usr/smalltalk-3.2.5'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME ""
#define PACKAGE_TARNAME ""
#define PACKAGE_VERSION ""
#define PACKAGE_STRING ""
#define PACKAGE_BUGREPORT ""
#define PACKAGE_URL ""
#define PACKAGE "libsigsegv"
#define VERSION "2.5"
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_DLFCN_H 1
#define LT_OBJDIR ".libs/"
#define HAVE_SYS_SIGNAL_H 1
#define CFG_SIGNALS "signals.h"
#define HAVE_UNISTD_H 1
#define HAVE_GETPAGESIZE 1
#define HAVE_SYSCONF_PAGESIZE 1
#define HAVE_MMAP_ANON 1
#define HAVE_MMAP_ANONYMOUS 1
#define HAVE_MMAP_DEVZERO 1
#define CFG_FAULT "fault-posix.h"
#define CFG_MACHFAULT "fault-none.h"
#define STACK_DIRECTION -1
#define HAVE_MINCORE 1
#define HAVE_STACKVMA 1
#define CFG_STACKVMA "stackvma-linux.c"
#define HAVE_GETRLIMIT 1
#define HAVE_SETRLIMIT 1
#define HAVE_SIGALTSTACK 1
#define HAVE_WORKING_SIGALTSTACK 1
#define CFG_LEAVE "leave-nop.c"
#define CFG_HANDLER "handler-unix.c"

configure: exit 0
